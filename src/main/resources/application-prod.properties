spring.application.name=RentCarKG

# Production Datasource - use environment variables
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/rentcarkg}
spring.datasource.username=${DB_USERNAME:myuser}
spring.datasource.password=${DB_PASSWORD:mypassword}
spring.datasource.driverClassName=org.postgresql.Driver

# Production Hibernate settings
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Flyway for production
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# JWT Secret Key - hardcoded for production (should be changed in production)
token.signing.key=VlKr3mmdUr2r2zHjOP7lvseZ+aS9fdPTz3ne0nhjto/0goZEZhIG//QD8d1/tqbsuMvsdKroJFd7DL+Wc151Tg==

# Production SMTP config - use environment variables
spring.mail.host=${MAIL_HOST:sandbox.smtp.mailtrap.io}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:39f8c47070f5f7}
spring.mail.password=${MAIL_PASSWORD:3ba27f7d7417eb}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# File upload configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Static resources
spring.web.resources.static-locations=file:./uploads/images/

# Server configuration
server.port=${PORT:8080}

# Production logging
logging.level.root=ERROR
logging.level.com.example.rentcarkg=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n