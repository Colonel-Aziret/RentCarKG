-- Create the table to store Flyway migration history
create table flyway_schema_history
(
    installed_rank integer                 not null
        constraint flyway_schema_history_pk
            primary key,
    version        varchar(50),
    description    varchar(200)            not null,
    type           varchar(20)             not null,
    script         varchar(1000)           not null,
    checksum       integer,
    installed_by   varchar(100)            not null,
    installed_on   timestamp default now() not null,
    execution_time integer                 not null,
    success        boolean                 not null
);

-- Set the owner of the table
alter table flyway_schema_history
    owner to postgres;

-- Create an index on the 'success' column for faster queries
create index flyway_schema_history_s_idx
    on flyway_schema_history (success);

-- Create the 'users' table for storing user data
create table users
(
    id       bigint generated by default as identity
        primary key,
    email    varchar(255),
    password varchar(255),
    role     varchar(255)
        constraint users_role_check
            check ((role)::text = ANY
        ((ARRAY ['CLIENT':: character varying, 'OWNER':: character varying, 'ADMIN':: character varying])::text[])
)
    );

-- Set the owner of the users table
alter table users
    owner to postgres;

-- Create the 'cars' table for storing car data
create table cars
(
    id            bigint generated by default as identity
        primary key,
    brand         varchar(255)   not null,
    model         varchar(255)   not null,
    price_per_day numeric(38, 2) not null,
    owner_id      bigint
        constraint fkm5ibu05fg8g81fo6491puswuu
            references users,
    year          integer,
    color         varchar(255),
    description   varchar(255),
    image_url     varchar(255),
    capacity      integer,
    fuel_type     varchar(50),
    transmission  varchar(50)
);

-- Set the owner of the cars table
alter table cars
    owner to postgres;

-- Create the 'bookings' table for storing booking data
create table bookings
(
    id         bigint generated by default as identity
        primary key,
    end_date   date not null,
    start_date date not null,
    status     varchar(255)
        constraint bookings_status_check
            check ((status)::text = ANY
        ((ARRAY ['PENDING':: character varying, 'CONFIRMED':: character varying, 'CANCELED':: character varying])::text[])
) ,
    total_price numeric(38, 2) not null,
    car_id      bigint         not null
        constraint fkj1y19nc7wf0rdp24pyhomn7ck
            references cars,
    user_id     bigint         not null
        constraint fkeyog2oic85xg7hsu2je2lx3s6
            references users,
    created_at  timestamp(6),
    penalty     numeric(38, 2)
);

-- Set the owner of the bookings table
alter table bookings
    owner to postgres;
